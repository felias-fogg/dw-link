Demonstrate debugging:


1. Notice that the LED is always on and pressing the button does not change anything
-> set breakpoint at setup and loop and see how far we get

2. Notice that after setup, there is a restart
- do single-stepping after reaching setup
- notice fresh restart when returning from setup
-> Hypothesis: bad interrupt

3. Set a breakpoint at __bad_interrupt
- do fresh restart: bad interrupt!
-> Check: avr IRQ vector list
   https://www.nongnu.org/avr-libc/user-manual/group__avr__interrupts.html
---->>>>> correct vect name

4. Recompile and notice that key pressing does not change anything
- Check by setting breakpoint inside readButton
- watch PIND and show it by stopping at loop
-> Notice that it is always zero, regadless of whether the button is pressed or not.
--->>>>> Look at setup and correct pinMode to INPUT_PULLUP and try again

5. Recompile and notice  that there is a change in mode, but there are short flashes
for mode=0 and mode=3 is not distinguishable from mode=2.
- set mode=0
- stop in ISR at line 60 and single-step
- notice that we always run into the last if, set counter = 99
- notice that this switches the LED on
--->>>> insert an additional else

6. Recompile and note that mode=0 is OK, but mode=3 is not
- set stop in line 60
- set counter=100 and mode=2
- single-step
- notice that we even at 100 toggle the LED already
--->>> insert additional condition mode == 3

7. Recompile and notice that now slow blinking is just constant
- set stop at 60 again
- set counter = 500 and mode = 2
- single-step and notice that counter does not fullfil cond: print
  counter
- notice that counter should be unsigned int

8. Recompile and notice that sometimes a mode is skipped
- check for whether we trigger when releasing -> bouncing after
release

9. Insert
   boolean released = digitalRead(BUTTON);
   if (millis() - lastpress < debounce_ms)
    return;
   lastpress = millis();              // remember time of last press for debouncing
   if (!released)
    mode = (mode+1) % 4;    
- and stop before if (millis
